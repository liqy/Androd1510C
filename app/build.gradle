apply plugin: 'com.android.application'
apply plugin: 'packer'
apply plugin: 'org.greenrobot.greendao' // apply plugin

//packer-begin
packer {
    archiveNameFormat = '${appPkg}-${buildType}-v${versionName}-${channel}'
    archiveOutput = new File(project.rootProject.buildDir, "apks")
//    channelList = ['*Douban*', 'Google/', '中文/@#市场', 'Hello@World',
//                   'GradleTest', '20070601!@#$%^&*(){}:"<>?-=[];\',./']
    channelFile = project.rootProject.file("channels/channels.txt")
    // channelMap = [
    //         "free" : project.rootProject.file("channels/free.txt"),
    //         "paid" : project.rootProject.file("channels/paid.txt"),
    //         "other": project.rootProject.file("channels/channels.txt")
    // ]
}
//packer-end



android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "com.liqy.androd1510c"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        v2 {
            storeFile file("dev_1505bd.jks")
            storePassword "123456"
            keyAlias "1505bd"
            keyPassword "123456"
            v2SigningEnabled true
        }

        v1 {
            storeFile file("dev_1505bd.jks")
            storePassword "123456"
            keyAlias "1505bd"
            keyPassword "123456"
            v2SigningEnabled false
        }

    }


    buildTypes {
        release {
            signingConfig signingConfigs.v2
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        beta {
            signingConfig signingConfigs.v1
            minifyEnabled false
        }

        alpha {
            signingConfig signingConfigs.v1
            minifyEnabled false
        }
    }

    flavorDimensions "tier"

    productFlavors {
        free {}

        paid {}

        other {}
    }

    lintOptions {
        abortOnError false
        htmlReport true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:25.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    //Retrofit依赖
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    //数据解析
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    //关联RXJava
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //RxJava依赖
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'

    implementation "com.mcxiaoke.packer-ng:helper:2.0.0"
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    compile 'org.greenrobot:greendao:3.2.2' // add library
    compile 'com.zhihu.android:matisse:0.4.3'

}
